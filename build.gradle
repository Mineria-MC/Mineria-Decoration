plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}


group = 'io.github.mineria'
version = '1.0-SNAPSHOT'

java {
    archivesBaseName = 'DecorationAddon'
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {
    mappings channel: 'parchment', version: "${parchment_version}-1.19.3"
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'DecorationAddon'

            mods {
                decorationaddon {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'DecorationAddon'

            mods {
                decorationaddon {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'DecorationAddon'

            mods {
                decorationaddon {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'decorationaddon', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                decorationaddon {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    flatDir {
        dir 'libs'
    }

    maven {
        name "Jared's maven"
        url "https://maven.blamejared.com/"
    }

    // Mineria Repo
    maven {
        name "Mineria Github"
        url /*"https://maven.pkg.github.com/Mineria-MC/Mineria"*/ "D:\\Victor\\Java Workspaces\\IDEA\\Modding\\Mineria\\build\\repo"
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.3-44.1.2'

    // Code Side only JEI API
    compileOnly(fg.deobf("mezz.jei:jei-${mc_version}-common-api:${jei_version}"))
    compileOnly(fg.deobf("mezz.jei:jei-${mc_version}-forge-api:${jei_version}"))

    // Runtime Side only JEI mod
    runtimeOnly(fg.deobf("mezz.jei:jei-${mc_version}-forge:${jei_version}"))

    // Mineria Impl
    implementation fg.deobf('io.github.mineria_mc:mineria:1.3.0-mc1.19.3')
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "decorationaddon",
                "Specification-Vendor"    : "mrlulu51, LGatodu47, Mathys_craft",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "mrlulu51, LGatodu47, Mathys_craft",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
